CREATE TABLE USER (
        UserID:         Integer NOT NULL AUTO_INCREMENT,
        Name:             Char(30) NOT NULL,
        DateJoined:             Long NOT NULL,
        Location:        Char(30) NOT NULL,
        Age:            Integer NOT NULL,
        Gender:                 Char(1) NOT NULL,
        Preference:             Char(1) NOT NULL,
        PasswordHash:    Char(48),

        Primary Key(UserID)
);

CREATE TABLE SuccessfulMatch (
        UserID1:        Integer NOT NULL,
        UserID2:        Integer NOT NULL,

        Primary Key(UserID1, UserID2),
        Foreign Key(UserID1) references User(UserID),
                ON DELETE CASCADE
        Foreign Key(UserID2) references User(UserID),
                ON DELETE CASCADE
        Check (UserID1 < UserID2)
);

CREATE TABLE UnsuccessfulMatch (
        UserID1:        Integer NOT NULL,
        UserID2:        Integer NOT NULL,

        Primary Key(UserID1, UserID2),
        Foreign Key(UserID1) references User(UserID),
                ON DELETE CASCADE
        Foreign Key(UserID2) references User(UserID),
                ON DELETE CASCADE
        Check (UserID1 < UserID2)
);

CREATE TABLE Image (
        UserID:                 Integer NOT NULL,
        DateAdded:             Long NOT NULL,
        ImageURL:        Char(2083) NOT NULL,
        DisplayOrder:            Integer NOT NULL,

        Primary Key(UserID),
        Foreign Key(UserID) references Users(UserID)
                ON DELETE CASCADE
);

CREATE TABLE Message (
        MessageID:        Integer NOT NULL AUTO_INCREMENT,
        SenderUserID:        Integer NOT NULL,
        ReceiverUserID:        Integer NOT NULL,
        MessageChar():            Char(20000) NOT NULL,
        SendTime:        Long NOT NULL,

        if (SenderUserID < ReceiverUserID)
                Foreign Key (SenderUserId, ReceiverUserID) references SuccessfulMatch(UserID1, UserID2)
                        ON DELETE CASCADE
        else
                Foreign Key (ReceiverUserID, SenderUserID) references SuccessfulMatch(UserID1, UserID2)
                        ON DELETE CASCADE
        end if;
        
        Primary Key(MessageID)
);

CREATE TABLE Business (
        BusinessID:        Char(30) NOT NULL,
        Location        Char(50),

        Primary Key(BusinessID)
);

CREATE TABLE Interest (
        InterestType: Char(20) NOT NULL,
        
        Primary Key(InterestType)
);

CREATE TABLE ActivityTime (
        Activity:               Char(50) NOT NULL,
        BusinessName:           Char(30) NOT NULL,
        Time:                   Char(5) NOT NULL,
        DateLocation:           Char(50) NOT NULL,
        Discount:               Integer,
        
        Primary Key(Activity, BusinessName, Time, DateLocation),
        Foreign Key(BusinessName) references Business(Name),
                ON DELETE CASCADE
);

CREATE TABLE InterestedIn (
        UserID:                 Integer NOT NULL,
        Interest:               Char(20) NOT NULL,
        
        Primary Key(UserID, Interest),
        Foreign Key(UserID) references User(UserID)
            ON DELETE CASCADE,
        Foreign Key(Interest) references Interest(InterestType)
            ON DELETE CASCADE
);

CREATE TABLE SuggestedBy (
        Time:                   Date,
        Location:               Char(50),
        Discount:               Char(50),
        ActivityName:               Char(50) NOT NULL,
        BusinessName:           Char(50) NOT NULL,
        
        Primary Key(Time, Location, Activity, BusinessName),
        Foreign Key(ActivityName) references Activity(ActivityName),
                ON DELETE CASCADE
        Foreign Key(Time, Location) references ActivityTime(Time, Location),
                ON DELETE CASCADE
        Foreign Key(BusinessName) references Business(BusinessName)
                ON DELETE CASCADE
);
